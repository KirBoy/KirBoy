{"version":3,"sources":["API/api.js","compinents/Dialogs/Dialogs.module.css","redux/posts-reducer.js","assets/1493.gif","common/Preloader.jsx","compinents/Login/Login.module.css","hoc/withAuthRedirect.js","compinents/Aside/Aside.module.css","Validators/validator-textarea.js","redux/users-reducer.js","reportWebVitals.js","compinents/Aside/Aside.jsx","redux/messages-reducer.js","compinents/Dialogs/Dialogs.jsx","compinents/Dialogs/DialogsContainer.jsx","compinents/Header/Header.jsx","redux/auth-reducer.js","compinents/Header/HeaderContainer.jsx","compinents/Login/Login.jsx","redux/app-reducer.js","App.js","redux/redux-store.js","index.js"],"names":["instance","axios","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","then","response","data","authAPI","getAuth","login","email","password","rememberMe","post","logout","delete","getStatusFollow","type","id","getUrlUser","userId","profileAPI","getProfile","getStatus","updateStatus","status","put","module","exports","ADD_POST","SET_USER_PROFILE","SET_IS_LOADING","SET_STATUS","initialState","profile","isLoading","addNewPost","text","setNewIsLoading","setStatus","setProfilePage","dispatch","setProfileStatus","updateProfileStatus","resultCode","postReducer","state","action","newPost","console","log","Preloader","src","preloader","mapStateToProps","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","required","value","undefined","FOLLOW","UNFOLLOW","SET_USERS","SET_NEW_PAGE","SET_TOTAL_USERS_COUNT","SET_STATUS_BTN","users","totalUsersCount","disabledBtn","fake","followAC","unfollowAC","statusBtn","getUsersThunkCreator","page","count","items","totalCount","getFollow","usersId","usersReducer","map","u","followed","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Aside","className","s","wrapper__aside","wrapper__item","wrapperLink","activeClassName","active","a","b","dialogs","name","messages","message","messageText","messagesReducer","newMessage","DialogItem","dialog","AmswerItem","answer","Dialogs","createRef","messageElement","dialogsPage","elem","dialogElement","dialogs__inner","answers","ref","onChange","current","changeMessageText","onClick","addMessage","AuthRedirectComponent","DialogsContainer","addMessageCreator","updateMessageCreator","Header","href","loginBlock","getLogoutUser","SET_USER_DATA","setAuthUserData","payload","getAuthUser","authReducer","HeaderContainer","compose","withRouter","LoginForm","onSubmit","values","getLoginUser","validate","errors","render","submitError","handleSubmit","submitting","input","meta","placeholder","error","touched","disabled","Login","FORM_ERROR","INITIALIZED_SUCCESS","initialized","appReducer","ProfileContainer","lazy","UsersContainer","App","initializeApp","Suspense","fallback","wrapper__content","path","app","reducers","combineReducers","profilePage","usersPage","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5d2e7a0c.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '4d47dbe3-03df-4e80-9e46-3df12b2a85e4'\r\n    }\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return instance.get(`/users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`/auth/me`).then(response => response.data);\r\n    },\r\n\r\n    login(email, password, rememberMe= false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe}).then(response => response.data);\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`/auth/login`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const getStatusFollow = (type, id) => {\r\n\r\n    if (type) {\r\n        return instance.delete(`/follow/` + id).then(response => response.data)\r\n    } else {\r\n        return instance.post(`/follow/` + id).then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport const getUrlUser = (userId) => {\r\n    return instance.get(`/profile/` + userId)\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n    },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__inner\":\"Dialogs_dialogs__inner__1AcUW\",\"dialog\":\"Dialogs_dialog__17jms\",\"answer\":\"Dialogs_answer__3g6a8\"};","import {getUrlUser, profileAPI} from \"../API/api\";\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nconst initialState = {\r\n    post: [\r\n        {id: 1, post: 'Hello guys!'},\r\n        {id: 2, post: 'My first post'},\r\n    ],\r\n    profile: null,\r\n    isLoading: false,\r\n    status: '',\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n     if (action.type == ADD_POST && action.text == '') {\r\n        return state\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                post: action.text,\r\n            };\r\n            return {...state, post: [...state.post, newPost]}\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case SET_IS_LOADING:\r\n            console.log(action)\r\n            return {...state, isLoading: action.isLoading};\r\n\r\n        case SET_STATUS:\r\n            console.log(action)\r\n            return {...state, status: action.status};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = (text) => ({type: ADD_POST, text})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setNewIsLoading = (isLoading) => ({type: SET_IS_LOADING, isLoading})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status })\r\n\r\nexport const setProfilePage = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setNewIsLoading(true));\r\n          getUrlUser(userId).then(response => {\r\n            dispatch(setNewIsLoading(false));\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n             dispatch(setStatus(response.data));\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProfileStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n                if (response.data.resultCode === 0 ) {\r\n                    dispatch(setStatus(status))\r\n                }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default postReducer;\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/1493.65c3f468.gif\";","import preloader from \"../assets/1493.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (<img src={preloader}/>)\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__17rzo\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n)\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper__aside\":\"Aside_wrapper__aside__iPW8P\",\"wrapper__content\":\"Aside_wrapper__content__2jMJp\",\"a\":\"Aside_a__2tTTW\",\"b\":\"Aside_b__F2PPk\",\"wrapper__item\":\"Aside_wrapper__item__2jDlY\",\"wrapper__title\":\"Aside_wrapper__title__2nF38\",\"wrapper__friends-list\":\"Aside_wrapper__friends-list__2ROuN\",\"wrapper__friend-link\":\"Aside_wrapper__friend-link__1v8F4\",\"wrapper__friend\":\"Aside_wrapper__friend__EAraD\",\"wrapperLink\":\"Aside_wrapperLink__3HoTg\",\"active\":\"Aside_active__3lqBw\",\"loginBlock\":\"Aside_loginBlock__LzcOO\"};","const composeValidators = (...validators) => (value) =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\nexport const required = (value) => (value ? undefined : \"Required\");\r\n// const mustBeNumber = (value) => (isNaN(value) ? \"Must be a number\" : undefined);\r\n// const minValue = (min) => (value) =>\r\n//     isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`;","import {getStatusFollow, getUsers} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_NEW_PAGE = 'SET_NEW_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\nconst SET_STATUS_BTN = 'SET_STATUS_BTN';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isLoading: true,\r\n    disabledBtn: [],\r\n    fake: 10,\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FAKE':\r\n            return {...state, fake: state.fake + 1}\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        console.log(u)\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            console.log(action)\r\n            return {...state, users: [...action.users]};\r\n\r\n        case SET_NEW_PAGE:\r\n            console.log(action)\r\n\r\n            return {...state, currentPage: action.page};\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            console.log(action)\r\n            return {...state, totalUsersCount: action.count};\r\n\r\n        case SET_IS_LOADING:\r\n            console.log(action)\r\n            return {...state, isLoading: action.isLoading};\r\n\r\n        case SET_STATUS_BTN:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                disabledBtn: action.status ? [...state.disabledBtn, action.userId] : [state.disabledBtn.filter(id => id !== action.userId)]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const setNewUsers = (users) => ({type: SET_USERS, users})\r\nexport const followAC = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setNewPage = (page) => ({type: SET_NEW_PAGE, page})\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count})\r\nexport const setNewIsLoading = (isLoading) => ({type: SET_IS_LOADING, isLoading})\r\nexport const statusBtn = (status, userId) => ({type: SET_STATUS_BTN, status, userId})\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setNewIsLoading(true));\r\n        dispatch(setNewPage(currentPage));\r\n        getUsers(currentPage, pageSize).then(response => {\r\n            dispatch(setNewUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            dispatch(setNewIsLoading(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getFollow = (type, usersId) => {\r\n    return (dispatch) => {\r\n        switch (type) {\r\n            case true:\r\n                dispatch(statusBtn(true, usersId));\r\n                getStatusFollow(true, usersId).then(response => {\r\n\r\n                    if (response.resultCode === 0) {\r\n                        dispatch(unfollowAC(usersId));\r\n                        dispatch(statusBtn(false, usersId));\r\n                    }\r\n                })\r\n\r\n            case false:\r\n                dispatch(statusBtn(true, usersId));\r\n                getStatusFollow(false, usersId).then(response => {\r\n\r\n                    if (response.resultCode === 0) {\r\n                        dispatch(followAC(usersId));\r\n                        dispatch(statusBtn(false, usersId));\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import s from './Aside.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Aside = () => {\r\n    return (\r\n        <aside className={s.wrapper__aside}>\r\n            <ul className='wrapper__list'>\r\n                <li className={s.wrapper__item}>\r\n                    <NavLink className={s.wrapperLink} activeClassName={s.active} to='/profile'>Profile</NavLink>\r\n                </li>\r\n                <li className={s.wrapper__item}>\r\n                    <NavLink className={s.wrapperLink} activeClassName={s.active} to='/dialogs'>Messages</NavLink>\r\n                </li>\r\n                <li className={s.wrapper__item}>\r\n                    <NavLink className={s.wrapperLink} activeClassName={s.active} to='/users'>Users</NavLink>\r\n                </li>\r\n                <li className={s.wrapper__item}>\r\n                    <a className='wrapper__link'>News</a>\r\n                </li>\r\n                <li className={s.wrapper__item}>\r\n                    <a className='wrapper__link'>Music</a>\r\n                </li>\r\n                <li className={s.wrapper__item}>\r\n                    <a className='wrapper__link'>Settings</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className={s['wrapper__friends']}>\r\n                <h2 className='wrapper__title'>Friends</h2>\r\n                <ul className={s['a-123_123123-sdsfdf134']}>\r\n                    <li className='wrapper__friend'>\r\n                        <a className={`${s.a} ${s.b}`}>\r\n                            <img className='wrapper__ava'/>\r\n                            <span className='wrapper__friend-name'>Andrew</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className='wrapper__friend'>\r\n                        <a className={s['wrapper__friend-link']}>\r\n                            <img className='wrapper__ava'/>\r\n                            <span className='wrapper__friend-name'>Sasha</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className='wrapper__friend'>\r\n                        <a className={s['wrapper__friend-link']}>\r\n                            <img className='wrapper__ava'/>\r\n                            <span className='wrapper__friend-name'>Sveta</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Aside;","const initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sava'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Masha'},\r\n        {id: 4, name: 'Dasha'},\r\n        {id: 5, name: 'Kirill'},\r\n        {id: 6, name: 'Tamara'},\r\n    ],\r\n    messages: {\r\n        message: [\r\n            {id: 1, message: 'Hello my friend'},\r\n            {id: 2, message: 'My name is Sasha\\''},\r\n            {id: 3, message: 'Nice to meet you'},\r\n        ],\r\n        messageText: '',\r\n    }\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n\r\n    if (action.type === 'ADD-MESSAGE' && action.text !== '') {\r\n        let newMessage = {\r\n            id: 4,\r\n            message: action.text,\r\n        }\r\n        return {...state, messages: {message: [...state.messages.message, newMessage], messageText: ''}};\r\n\r\n    } else if (action.type === 'ON-MESSAGE-CHANGE') {\r\n\r\n        return {...state, messages: {message: state.messages.message, messageText: action.text}};\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport const updateMessageCreator = (text) => {\r\n\r\n    return {\r\n        type: 'ON-MESSAGE-CHANGE',\r\n        text: text,\r\n    }\r\n}\r\n\r\nexport const addMessageCreator = (text) => {\r\n    return {\r\n        type: 'ADD-MESSAGE',\r\n        text: text,\r\n    }\r\n}\r\n\r\nexport default messagesReducer;","import s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <li className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst AmswerItem = (props) => {\r\n    return (\r\n        <li className={s.dialog}>\r\n            <p className={s.answer}>{props.text}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let newMessage = React.createRef()\r\n\r\n    const addMessageDialog = () => {\r\n        let text = newMessage.current.value;\r\n        props.addMessage(text);\r\n    }\r\n\r\n    const onMessageChange = () => {\r\n        let text = newMessage.current.value;\r\n        props.changeMessageText(text);\r\n    }\r\n\r\n    let messageElement = props.dialogsPage.messages.message.map(elem => <AmswerItem text={elem.message}/>);\r\n    let dialogElement = props.dialogsPage.dialogs.map(elem => <DialogItem name={elem.name} id={elem.id}/>);\r\n    return (\r\n        <div className={s.dialogs__inner}>\r\n            <ul className={s.dialogs}>\r\n                {dialogElement}\r\n            </ul>\r\n            <div>\r\n                <ul className={s.answers}>\r\n                    {messageElement}\r\n                </ul>\r\n                <textarea ref={newMessage} value={props.dialogsPage.messages.messageText} onChange={onMessageChange}/>\r\n                <button onClick={addMessageDialog}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageCreator, updateMessageCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(addMessageCreator(text));\r\n        },\r\n        changeMessageText: (text) => {\r\n            dispatch(updateMessageCreator(text));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport s from \"../Aside/Aside.module.css\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    if (!props.isAuth) {\r\n        return   <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n\r\n        <header className=\"wrapper__header\">\r\n            <a className='logo' href='#'>\r\n                <img/>\r\n            </a>\r\n            <div className={s.loginBlock}>\r\n                {props.login}\r\n                <button onClick={props.getLogoutUser}>Logout</button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, getAuth, getUrlUser} from \"../API/api\";\r\nimport {setNewIsLoading, setUserProfile} from \"./posts-reducer\";\r\nimport {FORM_ERROR} from \"final-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        },\r\n    }\r\n}\r\n\r\nexport const getAuthUser = () => async (dispatch) => {\r\n          let response = await authAPI.getAuth()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n  }\r\n\r\n\r\nexport const getLoginUser = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUser());\r\n    } else {\r\n        if (response.resultCode === 10) {\r\n            return {[FORM_ERROR]: response.messages[0]}\r\n        }\r\n    }\r\n\r\n    return {[FORM_ERROR]: response.messages[0]}\r\n}\r\n\r\nexport const getLogoutUser = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUser());\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getLogoutUser} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} getLogoutUser={this.props.getLogoutUser}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n})\r\n\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {getLogoutUser}))(HeaderContainer);","import {Form, Field} from 'react-final-form'\r\nimport {connect} from \"react-redux\";\r\nimport {getLoginUser, getLogoutUser, log_in} from \"../../redux/auth-reducer\";\r\nimport {required} from \"../../Validators/validator-textarea\";\r\nimport style from './Login.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <>\r\n        <h3>Login</h3>\r\n        <LoginForm getLoginUser={props.getLoginUser}/>\r\n    </>\r\n}\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={values => props.getLoginUser(values.email, values.password, values.rememberMe)}\r\n            validate={values => {\r\n                const errors = {}\r\n                if (!values.email) {\r\n                    errors.email = 'Required'\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = 'Required'\r\n                }\r\n                return errors\r\n            }}\r\n            render={({\r\n                         submitError,\r\n                         handleSubmit,\r\n                         submitting,\r\n                     }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <Field name=\"email\">\r\n                        {({input, meta}) => (\r\n                            <div>\r\n                                <label>Username</label>\r\n                                <input {...input} type=\"text\" placeholder=\"email\"/>\r\n                                {(meta.error || meta.submitError) && meta.touched && (\r\n                                    <span>{meta.error || meta.submitError}</span>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\">\r\n                        {({input, meta}) => (\r\n                            <div>\r\n                                <label>Password</label>\r\n                                <input {...input} type=\"text\" placeholder=\"Password\"/>\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"rememberMe\" type=\"checkbox\">\r\n                        {({input, meta}) => (\r\n                            <div>\r\n                                <label>rememberMe</label>\r\n                                <input {...input} type=\"checkbox\"/>\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    {submitError && <div className=\"error\">{submitError}</div>}\r\n                    <div className=\"buttons\">\r\n                        <button type=\"submit\" disabled={submitting}>\r\n                            Log In\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            )}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <Field name={props.name} component='input' type='text' validate={required} placeholder={props.name}>\r\n            {({input, meta, placeholder}) => (\r\n                <div>\r\n                    <input className={meta.error && meta.touched && style.error} type='text' placeholder={placeholder}\r\n                           {...input}/>\r\n                    {meta.error && meta.touched && <span className={style.error}>{meta.error}</span>}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n// const LoginForm = (props) => {\r\n//     const onSubmit = values => {\r\n//       props.log_in(values.login, values.password, values.rememberMe)\r\n//     }\r\n//\r\n//     return (\r\n//         <Form onSubmit={}\r\n//               render={({handleSubmit, submitError}) => (\r\n//                   <form onSubmit={handleSubmit}>\r\n//                       <div>\r\n//                           <Field name=\"login\" validate={required}>\r\n//                               {(props) => {\r\n//                                   return (\r\n//                                       <div>\r\n//                                           <input placeholder=\"Login\" type=\"text\" {...props.input} />\r\n//                                           {props.meta.error && props.meta.touched &&\r\n//                                           <span className={style.error}> {props.meta.error} </span>}\r\n//                                       </div>\r\n//                                   )\r\n//                               }\r\n//                               }\r\n//                           </Field>\r\n//                       </div>\r\n//                       <div className={style.password}>\r\n//                           <Field name=\"password\" validate={required}>\r\n//                               {(props) => {\r\n//                                   return (\r\n//                                       <div>\r\n//                                           <input placeholder=\"Password\" type=\"text\" {...props.input} />\r\n//                                           {props.meta.error && props.meta.touched &&\r\n//                                           <span className={style.error}> {props.meta.error} </span>}\r\n//                                       </div>\r\n//                                   )\r\n//                               }\r\n//                               }\r\n//                           </Field>\r\n//                       </div>\r\n//                       <div>\r\n//                           <Field name=\"rememberMe\">\r\n//                               {(props) => (<input type=\"checkbox\" {...props.input} />)}\r\n//                           </Field>\r\n//                       </div>\r\n//                       {submitError && <div className={style.formError}> {submitError} </div>}\r\n//                       <button> Login</button>\r\n//                   </form>\r\n//               )}\r\n//         />\r\n//     );\r\n// };\r\n\r\n\r\nconst Login = connect(mapStateToProps, {getLoginUser, getLogoutUser})(LoginPage);\r\n\r\nexport default Login;\r\n\r\n","import {getAuthUser} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,})\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUser());\r\n\r\n    promise.then(()=> {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","import './App.css';\nimport Aside from \"./compinents/Aside/Aside\";\nimport {BrowserRouter, NavLink, Route} from \"react-router-dom\";\nimport s from './compinents/Aside/Aside.module.css'\nimport DialogsContainer from \"./compinents/Dialogs/DialogsContainer\";\nimport HeaderContainer from \"./compinents/Header/HeaderContainer\";\nimport React from \"react\";\nimport Login from \"./compinents/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./common/Preloader\";\n\nconst ProfileContainer = React.lazy(() => import('./compinents/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./compinents/Users/UsersContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <React.Suspense fallback={<Preloader/>}>\n                <BrowserRouter>\n                    <div className='container'>\n                        <div className=\"wrapper\">\n                            <HeaderContainer/>\n                            <div className='wrapper__inner'>\n                                <Aside/>\n                                <div className={s.wrapper__content}>\n                                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                                    <Route path='/users' render={() => <UsersContainer/>}/>\n                                    <Route path='/login' render={() => <Login/>}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </React.Suspense>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => (\n    {\n        initialized: state.app.initialized\n    }\n)\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n\n\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport postReducer from \"./posts-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: postReducer,\r\n    dialogsPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from 'react';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n// setInterval(() => {\n//     store.dispatch({type: 'FAKE'})\n// }, 1000)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n\n"],"sourceRoot":""}